/** Коды ошибок Numerical Algorithms **/  
typedef  enum 
{
    NA_PARAM = 1,     // Некорректные входные парамтеры
    NA_EMPTY_ROOT = 1,// Нет корней на заданном промежутке
    NA_ITER = 1,      // Ограничение на количество итераций  
    NA_OK = 0,        // Корректное выполнение (корень существует и найден)
} NAError;

/* Множество функций R -> R */
typedef double (*RRfunc)(double x);



/** Вычисляет корень функции (монотонной, непрерывной) на отрезке [a;b] методом касательных.
 **
 ** Параметры:
 **     f: заданная функция 
 **     a, b: границы отрезка
 **     epsilon: достаточная точность корня
 **     err: адресс для сохранения кода возврата 
 ** 

 **
 ** Возвращаемое значение:
 **     В случае ошибочных переданных значений: a >= b, epsilon < 0, нулевой адрес f  - функиця возращает 1,
 **     по адресу err записывается NA_PARAN
 **
 **     В случчае успеха функция возвращает корень, по адресу err записывается 
 **     код NA_OK
 **
 **     В случае если на заданном промежутке нет корней, функция возвращает 1, а по одресу err 
 **     записывается NA_EMPTY_ROOT
 **
 **     В случае если корень не будет вычислен за заднное количество итераций функция возвращает 
 **     последнее найденное значение, а по адресу err записывается NA_ITER
 **/
double find_root (RRfunc f, double a, double b, double epsilon, NAError *err);